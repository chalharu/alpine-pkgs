name: Deploy to Pages

on:
  schedule:
    - cron:  '0 17 * * *'
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - name: REPOSITORY_NAMEの取得
        id: repository-name
        run: echo "repository-name=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_OUTPUT
    outputs:
      repository-name: ${{ steps.repository-name.outputs.repository-name }}
  get-apkbuild-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          path: src
      - name: APKBUILDファイルの検索
        id: apkbuild-files
        run: echo "apkbuild-files=$(find $PWD/src -name APKBUILD -type f | jq -R | jq -s -c)" >> $GITHUB_OUTPUT
    outputs:
      apkbuild-files: ${{ steps.apkbuild-files.outputs.apkbuild-files }}
  build:
    strategy:
      fail-fast: false
      matrix:
        apk-arch:
          - x86_64
          - aarch64
        include:
          - arch: amd64
            apk-arch: x86_64
          - arch: arm64/v8
            apk-arch: aarch64
    needs:
      - initialize
      - get-apkbuild-matrix
    with:
      apkbuild-files: ${{ needs.get-apkbuild-matrix.outputs.apkbuild-files }}
      repository-name: ${{ needs.initialize.outputs.repository-name }}
      apk-arch: ${{ matrix.apk-arch }}
      arch: ${{ matrix.arch }}
    uses: "./.github/workflows/build.yml"
    secrets: inherit
  upload-artifact:
    strategy:
      matrix:
        apk-arch:
          - x86_64
          - aarch64
    environment: Alpine packages
    runs-on: ubuntu-latest
    needs:
      - build
      - initialize
      - get-apkbuild-matrix
    if: always() && !contains(needs.*.result, 'cancelled') && !contains(needs.initialize.result, 'failure') && !contains(needs.get-apkbuild-matrix.result, 'failure')
    steps:
      - uses: actions/cache/restore@v4.2.2
        with:
          path: ./packages
          key: packages-${{ matrix.apk-arch }}-99999999999999
          restore-keys: |
            packages-${{ matrix.apk-arch }}-
            packages-
      - name: Archive artifacts
        uses: actions/upload-artifact@v4.6.1
        with:
          name: dist-${{ matrix.apk-arch }}
          retention-days: 1
          path: |
            packages/${{ needs.initialize.outputs.repository-name }}
          overwrite: true
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: upload-artifact
    if: always() && !contains(needs.upload-artifact.result, 'cancelled') && !contains(needs.upload-artifact.result, 'failure')
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4.1.9
        with:
          pattern: dist-*
          merge-multiple: true
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
