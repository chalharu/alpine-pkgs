name: Deploy to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# concurrency:
#   group: "pages"
#   cancel-in-progress: false

jobs:
  build:
    environment: Alpine packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: src
      - name: Setup latest Alpine Linux
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.19
      - name: Add packages
        shell: alpine.sh --root {0}
        run: apk add alpine-sdk
      - name: modify abuild.conf
        shell: alpine.sh --root {0}
        env:
          PACKAGER_PRIVKEY: ${{ secrets.PACKAGER_PRIVKEY }}
          PACKAGER_PUBKEY: ${{ vars.PACKAGER_PUBKEY }}
        run: |
          ABUILD_CONF="/etc/abuild.conf"
          if [ `grep -E "^PACKAGER=" $ABUILD_CONF | wc -l` == "0" ]; then echo 'PACKAGER="${{ vars.PACKAGER }}"' >> $ABUILD_CONF; fi
          if [ `grep -E "^MAINTAINER=" $ABUILD_CONF | wc -l` == "0" ]; then echo 'MAINTAINER="${{ vars.MAINTAINER }}"' >> $ABUILD_CONF; fi
          echo $PACKAGER_PRIVKEY | base64 -d > /privkey
          echo $PACKAGER_PUBKEY | base64 -d > /privkey.pub
          if [ `grep -E "^PACKAGER_PRIVKEY=" $ABUILD_CONF | wc -l` == "0" ]; then echo 'PACKAGER_PRIVKEY=/privkey' >> $ABUILD_CONF; fi
          DESTDIR=${{ github.workspace }}/packages
          if [ `grep -E "^REPODEST=" $ABUILD_CONF | wc -l` == "0" ]; then echo "REPODEST=$DESTDIR" >> $ABUILD_CONF; fi
          mkdir -p $DESTDIR
      - name: Build package
        shell: alpine.sh --root {0}
        run: cd src && abuild -r -F

#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Setup Pages
#        uses: actions/configure-pages@v5
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v3
#        with:
#          # Upload entire repository
#          path: '.'
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4
